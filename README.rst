За быстрым ответом: @youngtoshley (телеграм)
За не очень быстрым ответом: aogridasov@gmail.com


**Деплой проекта**

Пример заполнения .env файла

```
DB_URL=postgresql+asyncpg://dev-user:password@pg:5432/dev_db
API_KEY=123
```

Команда ``docker compose up`` поднимет 2 контейнера:
1) PostgreSQL
2) бэкенд

**(при наличии корректно заполненного файла .env в корневой папке, команду выполнять из корневой папки)**


Миграции применятся автоматически, в т.ч. дата миграции, наполняющие БД.

Тестовые данные лежат в файле ``/src/db/migrations/sample_data.json``.
При желании их можно дополнить при **строгом** сохранении формата входных данных.

Документация методов АПИ (swagger) доступна по адресу: ``http://0.0.0.0:8000/api/docs/``
после разворачивания проекта. Для взаимодействия с эндпоинтами, нужно прокидывать ключ
доступа. В сваггере это можно сделать в верхнем правом углу, нажав кнопку Authorize.
Значение ключа задается в ``.env``.



**Описание проделанной работы**

Все пункты тестового реализованы. Где-то можно было сделать оптимальней, но я был ограничен
по времени. Ниже кратко опишу реализацию каждого пункта запрошеного функционала.

1. Список всех организаций находящихся в конкретном здании:
    Реализация: эндпоинт `/v1/organizations`, фильтрация по параметру `building_pk`

2. Список всех организаций, которые относятся к указанному виду деятельности
    Реализация: эндпоинт `/v1/organizations`, фильтрация по параметру `operation_type_pk`

3. Вывод информации об организации по её идентификатору.
    Реализация: эндпоинт `/v1/organizations/{pk}`

4. Поиск организации по названию.
    Реализация: эндпоинт `/v1/organizations`, фильтрация по параметру `title_search`

5. Ограничить уровень вложенности деятельностей 3 уровням
    Реализация: ограничено на уровне моделей к алхимии. Сама структура и запросы, работающие
    с БД - не ограничены.

6. Искать организации по виду деятельности. Например, поиск по виду деятельности «Еда»,
    которая находится на первом уровне дерева, и чтобы нашлись все организации, которые относятся к видам деятельности, лежащим внутри.
    Реализация: эндпоинт `/v1/organizations_by_operation_type`

7. список организаций, которые находятся в заданном радиусе/прямоугольной области относительно указанной точки на карте
    Реализация: эндпоинт `/v1/organizations_by_coordinates`

8. список зданий
    Реализация: /v1/buildings
